REM   Script: Exerc. 20
REM   20. Listar professores e a soma da carga horária das disciplinas que lecionam
Crie uma consulta que exiba o nome dos professores e a soma da carga horária total das disciplinas que eles lecionam, ordenando pelos professores que lecionam disciplinas com mais horas.

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    especialidade VARCHAR2(100) NOT NULL 
);

INSERT INTO professores (nome, especialidade) VALUES ('Ana Oliveira', 'Matemática');

INSERT INTO professores (nome, especialidade) VALUES ('Carlos Silva', 'Física');

INSERT INTO professores (nome, especialidade) VALUES ('Beatriz Santos', 'História');

INSERT INTO professores (nome, especialidade) VALUES ('Daniel Lima', 'Química');

INSERT INTO professores (nome, especialidade) VALUES ('Eduardo Pereira', 'Biologia');

SELECT nome, especialidade 
FROM professores 
ORDER BY nome DESC;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    especialidade VARCHAR2(100) NOT NULL 
);

INSERT INTO professores (nome, especialidade) VALUES ('Ana Oliveira', 'Matemática');

INSERT INTO professores (nome, especialidade) VALUES ('Carlos Silva', 'Física');

INSERT INTO professores (nome, especialidade) VALUES ('Beatriz Santos', 'História');

INSERT INTO professores (nome, especialidade) VALUES ('Daniel Lima', 'Química');

INSERT INTO professores (nome, especialidade) VALUES ('Eduardo Pereira', 'Biologia');

SELECT nome, especialidade 
FROM professores 
ORDER BY nome DESC;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Matemática', 80);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 60);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('História', 40);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Química', 70);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Biologia', 50);

SELECT nome, carga_horaria 
FROM disciplinas 
ORDER BY carga_horaria DESC;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE alunos CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE alunos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    status_matricula VARCHAR2(20) NOT NULL 
);

INSERT INTO alunos (nome, status_matricula) VALUES ('João Silva', 'Ativo');

INSERT INTO alunos (nome, status_matricula) VALUES ('Maria Santos', 'Concluído');

INSERT INTO alunos (nome, status_matricula) VALUES ('Pedro Oliveira', 'Ativo');

INSERT INTO alunos (nome, status_matricula) VALUES ('Ana Costa', 'Trancado');

INSERT INTO alunos (nome, status_matricula) VALUES ('Lucas Lima', 'Ativo');

INSERT INTO alunos (nome, status_matricula) VALUES ('Laura Mendes', 'Concluído');

INSERT INTO alunos (nome, status_matricula) VALUES ('Carla Souza', 'Trancado');

INSERT INTO alunos (nome, status_matricula) VALUES ('Rafael Ferreira', 'Ativo');

SELECT status_matricula, COUNT(*) AS numero_alunos 
FROM alunos 
GROUP BY status_matricula;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE cursos_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE cursos_disciplinas ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

INSERT INTO cursos (nome) VALUES ('Ciências Exatas');

INSERT INTO cursos (nome) VALUES ('Humanidades');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Matemática', 80);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 60);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('História', 40);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Química', 70);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Sociologia', 50);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 1); -- Matemática em Ciências Exatas 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 2); -- Física em Ciências Exatas 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 4); -- Química em Ciências Exatas 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 3); -- História em Humanidades 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 5); -- Sociologia em Humanidades 
 
-- 8. Consulta para listar cursos com a soma total da carga horária de suas disciplinas 
SELECT c.nome AS curso, SUM(d.carga_horaria) AS carga_horaria_total 
FROM cursos c 
JOIN cursos_disciplinas cd ON c.id = cd.curso_id 
JOIN disciplinas d ON cd.disciplina_id = d.id 
GROUP BY c.nome;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE cursos_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE cursos_disciplinas ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

INSERT INTO cursos (nome) VALUES ('Ciências Exatas');

INSERT INTO cursos (nome) VALUES ('Humanidades');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Matemática', 80);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 60);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('História', 40);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Química', 70);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Sociologia', 50);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 1); -- Matemática em Ciências Exatas 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 2); -- Física em Ciências Exatas 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 4); -- Química em Ciências Exatas 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 3); -- História em Humanidades 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 5); -- Sociologia em Humanidades 
 
-- 8. Consulta para listar cursos com a soma total da carga horária de suas disciplinas 
SELECT c.nome AS curso, SUM(d.carga_horaria) AS carga_horaria_total 
FROM cursos c 
JOIN cursos_disciplinas cd ON c.id = cd.curso_id 
JOIN disciplinas d ON cd.disciplina_id = d.id 
GROUP BY c.nome;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE cursos_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE cursos_disciplinas ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

INSERT INTO cursos (nome) VALUES ('Ciências Exatas');

INSERT INTO cursos (nome) VALUES ('Humanidades');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Matemática', 80);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 60);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('História', 40);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Química', 70);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Sociologia', 50);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 1); -- Matemática em Ciências Exatas 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 2); -- Física em Ciências Exatas 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 4); -- Química em Ciências Exatas 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 3); -- História em Humanidades 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 5); -- Sociologia em Humanidades 
 
-- 8. Consulta para listar cursos com a soma total da carga horária de suas disciplinas 
SELECT c.nome AS curso, SUM(d.carga_horaria) AS carga_horaria_total 
FROM cursos c 
JOIN cursos_disciplinas cd ON c.id = cd.curso_id 
JOIN disciplinas d ON cd.disciplina_id = d.id 
GROUP BY c.nome;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE cursos_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE cursos_disciplinas ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

INSERT INTO cursos (nome) VALUES ('Ciências Exatas');

INSERT INTO cursos (nome) VALUES ('Humanidades');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Matemática', 80);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 60);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('História', 40);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Química', 70);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Sociologia', 50);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 1); -- Matemática em Ciências Exatas 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 2); -- Física em Ciências Exatas 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 4); -- Química em Ciências Exatas 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 3); -- História em Humanidades 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 5); -- Sociologia em Humanidades 
 
-- 8. Consulta para listar cursos com a soma total da carga horária de suas disciplinas 
SELECT c.nome AS curso, SUM(d.carga_horaria) AS carga_horaria_total 
FROM cursos c 
JOIN cursos_disciplinas cd ON c.id = cd.curso_id 
JOIN disciplinas d ON cd.disciplina_id = d.id 
GROUP BY c.nome;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE cursos_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE cursos_disciplinas ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

INSERT INTO cursos (nome) VALUES ('Ciências Exatas');

INSERT INTO cursos (nome) VALUES ('Humanidades');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Matemática', 80);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 60);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('História', 40);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Química', 70);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Sociologia', 50);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 1); -- Matemática em Ciências Exatas 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 2); -- Física em Ciências Exatas 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 4); -- Química em Ciências Exatas 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 3); -- História em Humanidades 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 5); -- Sociologia em Humanidades 
 
-- 8. Consulta para listar cursos com a soma total da carga horária de suas disciplinas 
SELECT c.nome AS curso, SUM(d.carga_horaria) AS carga_horaria_total 
FROM cursos c 
JOIN cursos_disciplinas cd ON c.id = cd.curso_id 
JOIN disciplinas d ON cd.disciplina_id = d.id 
GROUP BY c.nome;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE cursos_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE cursos_disciplinas ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

INSERT INTO cursos (nome) VALUES ('Ciências Exatas');

INSERT INTO cursos (nome) VALUES ('Humanidades');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Matemática', 80);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 60);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('História', 40);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Química', 70);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Sociologia', 50);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 1); -- Matemática em Ciências Exatas 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 2); -- Física em Ciências Exatas 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 4); -- Química em Ciências Exatas 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 3); -- História em Humanidades 
INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 5); -- Sociologia em Humanidades 
 
-- 8. Consulta para listar cursos com a soma total da carga horária de suas disciplinas 
SELECT c.nome AS curso, SUM(d.carga_horaria) AS carga_horaria_total 
FROM cursos c 
JOIN cursos_disciplinas cd ON c.id = cd.curso_id 
JOIN disciplinas d ON cd.disciplina_id = d.id 
GROUP BY c.nome;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE cursos_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE cursos_disciplinas ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

INSERT INTO cursos (nome) VALUES ('Ciências Exatas');

INSERT INTO cursos (nome) VALUES ('Humanidades');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Matemática', 80);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 60);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('História', 40);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Química', 70);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Sociologia', 50);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 1);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 2);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 4);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 3);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 5);

SELECT c.nome AS curso, SUM(d.carga_horaria) AS carga_horaria_total 
FROM cursos c 
JOIN cursos_disciplinas cd ON c.id = cd.curso_id 
JOIN disciplinas d ON cd.disciplina_id = d.id 
GROUP BY c.nome;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE professores_turmas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE turmas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE turmas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE professores_turmas ( 
    professor_id NUMBER NOT NULL, 
    turma_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (turma_id) REFERENCES turmas(id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO professores (nome) VALUES ('Daniel Lima');

INSERT INTO professores (nome) VALUES ('Eduardo Pereira');

INSERT INTO turmas (nome) VALUES ('Turma A');

INSERT INTO turmas (nome) VALUES ('Turma B');

INSERT INTO turmas (nome) VALUES ('Turma C');

INSERT INTO turmas (nome) VALUES ('Turma D');

INSERT INTO turmas (nome) VALUES ('Turma E');

INSERT INTO turmas (nome) VALUES ('Turma F');

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (1, 1);

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE professores_turmas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE turmas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE turmas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (1, 2);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (1, 3);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (1, 4);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (2, 1);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (2, 2);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (2, 3);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (3, 1);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (4, 1);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (4, 2);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (4, 3);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (4, 4);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (4, 5);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (5, 1);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (5, 2);

SELECT p.nome 
FROM professores p 
JOIN professores_turmas pt ON p.id = pt.professor_id 
GROUP BY p.nome 
HAVING COUNT(pt.turma_id) > 3;

CREATE TABLE professores_turmas ( 
    professor_id NUMBER NOT NULL, 
    turma_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (turma_id) REFERENCES turmas(id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO professores (nome) VALUES ('Daniel Lima');

INSERT INTO professores (nome) VALUES ('Eduardo Pereira');

INSERT INTO turmas (nome) VALUES ('Turma A');

INSERT INTO turmas (nome) VALUES ('Turma B');

INSERT INTO turmas (nome) VALUES ('Turma C');

INSERT INTO turmas (nome) VALUES ('Turma D');

INSERT INTO turmas (nome) VALUES ('Turma E');

INSERT INTO turmas (nome) VALUES ('Turma F');

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (1, 1);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (1, 2);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (1, 3);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (1, 4);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (2, 1);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (2, 2);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (2, 3);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (3, 1);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (4, 1);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (4, 2);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (4, 3);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (4, 4);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (4, 5);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (5, 1);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (5, 2);

SELECT p.nome 
FROM professores p 
JOIN professores_turmas pt ON p.id = pt.professor_id 
GROUP BY p.nome 
HAVING COUNT(pt.turma_id) > 3;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE alunos_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE alunos CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE alunos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE alunos_disciplinas ( 
    aluno_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (aluno_id) REFERENCES alunos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

INSERT INTO alunos (nome) VALUES ('João Silva');

INSERT INTO alunos (nome) VALUES ('Maria Santos');

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE alunos_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE alunos CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE alunos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE alunos_disciplinas ( 
    aluno_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (aluno_id) REFERENCES alunos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

INSERT INTO alunos (nome) VALUES ('João Silva');

INSERT INTO alunos (nome) VALUES ('Maria Santos');

INSERT INTO alunos (nome) VALUES ('Pedro Oliveira');

INSERT INTO alunos (nome) VALUES ('Ana Costa');

INSERT INTO alunos (nome) VALUES ('Lucas Lima');

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO alunos (nome) VALUES ('Pedro Oliveira');

INSERT INTO alunos (nome) VALUES ('Ana Costa');

INSERT INTO alunos (nome) VALUES ('Lucas Lima');

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('História');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO disciplinas (nome) VALUES ('Biologia');

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (1, 1);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (1, 2);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (2, 2);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (2, 3);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (2, 4);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (3, 1);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (3, 3);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (4, 1);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (4, 4);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (4, 5);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (5, 2);

SELECT a.nome, COUNT(ad.disciplina_id) AS numero_disciplinas 
FROM alunos a 
JOIN alunos_disciplinas ad ON a.id = ad.aluno_id 
GROUP BY a.nome 
HAVING COUNT(ad.disciplina_id) > 1 
ORDER BY numero_disciplinas DESC;

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('História');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO disciplinas (nome) VALUES ('Biologia');

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (1, 1);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (1, 2);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (2, 2);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (2, 3);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (2, 4);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (3, 1);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (3, 3);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (4, 1);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (4, 4);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (4, 5);

INSERT INTO alunos_disciplinas (aluno_id, disciplina_id) VALUES (5, 2);

SELECT a.nome, COUNT(ad.disciplina_id) AS numero_disciplinas 
FROM alunos a 
JOIN alunos_disciplinas ad ON a.id = ad.aluno_id 
GROUP BY a.nome 
HAVING COUNT(ad.disciplina_id) > 1 
ORDER BY numero_disciplinas DESC;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE cursos_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE cursos_disciplinas ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

INSERT INTO cursos (nome) VALUES ('Engenharia');

INSERT INTO cursos (nome) VALUES ('Medicina');

INSERT INTO cursos (nome) VALUES ('Direito');

INSERT INTO cursos (nome) VALUES ('Ciências da Computação');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Cálculo', 500);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 400);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Histologia', 600);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Anatomia', 700);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Programação', 300);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Algoritmos', 350);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Direito Constitucional', 450);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Direito Penal', 400);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 1);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 2);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 3);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 4);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (3, 7);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (3, 8);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (4, 5);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (4, 6);

SELECT c.nome AS curso, SUM(d.carga_horaria) AS carga_horaria_total 
FROM cursos c 
JOIN cursos_disciplinas cd ON c.id = cd.curso_id 
JOIN disciplinas d ON cd.disciplina_id = d.id 
GROUP BY c.nome 
HAVING SUM(d.carga_horaria) > 2000;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE cursos_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE cursos_disciplinas ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

INSERT INTO cursos (nome) VALUES ('Engenharia');

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE cursos_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE cursos_disciplinas ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

INSERT INTO cursos (nome) VALUES ('Engenharia');

INSERT INTO cursos (nome) VALUES ('Medicina');

INSERT INTO cursos (nome) VALUES ('Direito');

INSERT INTO cursos (nome) VALUES ('Ciências da Computação');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Cálculo', 800);   -- Aumentando carga horária 
INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 700);    -- Aumentando carga horária 
INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Histologia', 600);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Anatomia', 700);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Programação', 300);

INSERT INTO cursos (nome) VALUES ('Medicina');

INSERT INTO cursos (nome) VALUES ('Direito');

INSERT INTO cursos (nome) VALUES ('Ciências da Computação');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Cálculo', 500);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 400);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Histologia', 600);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Anatomia', 700);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Programação', 300);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Algoritmos', 350);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Direito Constitucional', 450);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Direito Penal', 400);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 1);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 2);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 3);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 4);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (3, 7);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (3, 8);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (4, 5);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (4, 6);

SELECT c.nome AS curso, SUM(d.carga_horaria) AS carga_horaria_total 
FROM cursos c 
JOIN cursos_disciplinas cd ON c.id = cd.curso_id 
JOIN disciplinas d ON cd.disciplina_id = d.id 
GROUP BY c.nome 
HAVING SUM(d.carga_horaria) > 2000;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE cursos_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE cursos_disciplinas ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

INSERT INTO cursos (nome) VALUES ('Engenharia');

INSERT INTO cursos (nome) VALUES ('Medicina');

INSERT INTO cursos (nome) VALUES ('Direito');

INSERT INTO cursos (nome) VALUES ('Ciências da Computação');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Cálculo', 800);   -- Aumentando carga horária 
INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 700);    -- Aumentando carga horária 
INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Histologia', 600);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Anatomia', 700);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Programação', 300);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Algoritmos', 350);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Direito Constitucional', 450);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Direito Penal', 400);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 1);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 2);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 3);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 4);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (3, 7);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (3, 8);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (4, 5);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (4, 6);

SELECT c.nome AS curso, SUM(d.carga_horaria) AS carga_horaria_total 
FROM cursos c 
JOIN cursos_disciplinas cd ON c.id = cd.curso_id 
JOIN disciplinas d ON cd.disciplina_id = d.id 
GROUP BY c.nome 
HAVING SUM(d.carga_horaria) > 2000;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE cursos_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE cursos_disciplinas ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

INSERT INTO cursos (nome) VALUES ('Engenharia');

INSERT INTO cursos (nome) VALUES ('Medicina');

INSERT INTO cursos (nome) VALUES ('Direito');

INSERT INTO cursos (nome) VALUES ('Ciências da Computação');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Cálculo', 800);   -- Aumentando carga horária 
INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 700);    -- Aumentando carga horária 
INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Histologia', 600);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Anatomia', 700);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Programação', 300);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Algoritmos', 350);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Direito Constitucional', 450);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Direito Penal', 400);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 1);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 2);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 3);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 4);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (3, 7);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (3, 8);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (4, 5);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (4, 6);

SELECT c.nome AS curso, SUM(d.carga_horaria) AS carga_horaria_total 
FROM cursos c 
JOIN cursos_disciplinas cd ON c.id = cd.curso_id 
JOIN disciplinas d ON cd.disciplina_id = d.id 
GROUP BY c.nome 
HAVING SUM(d.carga_horaria) > 2000;

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Algoritmos', 350);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Direito Constitucional', 450);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Direito Penal', 400);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 1);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 2);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 3);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 4);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (3, 7);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (3, 8);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (4, 5);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (4, 6);

SELECT c.nome AS curso, SUM(d.carga_horaria) AS carga_horaria_total 
FROM cursos c 
JOIN cursos_disciplinas cd ON c.id = cd.curso_id 
JOIN disciplinas d ON cd.disciplina_id = d.id 
GROUP BY c.nome 
HAVING SUM(d.carga_horaria) > 2000;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE cursos_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE cursos_disciplinas ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

INSERT INTO cursos (nome) VALUES ('Engenharia');

INSERT INTO cursos (nome) VALUES ('Medicina');

INSERT INTO cursos (nome) VALUES ('Direito');

INSERT INTO cursos (nome) VALUES ('Ciências da Computação');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Cálculo', 800);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 700);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Histologia', 600);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Anatomia', 700);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Programação', 300);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Algoritmos', 350);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Direito Constitucional', 450);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Direito Penal', 400);

SELECT * FROM cursos;

SELECT * FROM disciplinas;

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 1);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 2);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 3);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 4);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (3, 7);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (3, 8);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (4, 5);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (4, 6);

SELECT c.nome AS curso, SUM(d.carga_horaria) AS carga_horaria_total 
FROM cursos c 
JOIN cursos_disciplinas cd ON c.id = cd.curso_id 
JOIN disciplinas d ON cd.disciplina_id = d.id 
GROUP BY c.nome 
HAVING SUM(d.carga_horaria) > 2000;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE professores_turmas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE turmas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE turmas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE professores_turmas ( 
    professor_id NUMBER NOT NULL, 
    turma_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (turma_id) REFERENCES turmas(id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO professores (nome) VALUES ('Daniel Lima');

INSERT INTO professores (nome) VALUES ('Eduardo Pereira');

INSERT INTO turmas (nome) VALUES ('Turma A');

INSERT INTO turmas (nome) VALUES ('Turma B');

INSERT INTO turmas (nome) VALUES ('Turma C');

INSERT INTO turmas (nome) VALUES ('Turma D');

INSERT INTO turmas (nome) VALUES ('Turma E');

INSERT INTO turmas (nome) VALUES ('Turma F');

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (1, 1);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (1, 2);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (1, 3);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (2, 1);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (2, 4);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (3, 1);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (3, 5);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (4, 1);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (4, 2);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (4, 3);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (4, 6);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (5, 3);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (5, 4);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (5, 5);

INSERT INTO professores_turmas (professor_id, turma_id) VALUES (5, 6);

SELECT p.nome AS professor, COUNT(pt.turma_id) AS total_turmas 
FROM professores p 
JOIN professores_turmas pt ON p.id = pt.professor_id 
GROUP BY p.nome 
ORDER BY total_turmas DESC;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE cursos_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE cursos_disciplinas ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

INSERT INTO cursos (nome) VALUES ('Engenharia');

INSERT INTO cursos (nome) VALUES ('Medicina');

INSERT INTO cursos (nome) VALUES ('Direito');

INSERT INTO cursos (nome) VALUES ('Ciências da Computação');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Cálculo', 500);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 400);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Histologia', 600);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Anatomia', 700);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Programação', 300);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Algoritmos', 350);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Direito Constitucional', 450);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Direito Penal', 400);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 1);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (1, 2);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 3);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (2, 4);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (3, 7);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (3, 8);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (4, 5);

INSERT INTO cursos_disciplinas (curso_id, disciplina_id) VALUES (4, 6);

SELECT c.nome AS curso, AVG(d.carga_horaria) AS media_carga_horaria 
FROM cursos c 
JOIN cursos_disciplinas cd ON c.id = cd.curso_id 
JOIN disciplinas d ON cd.disciplina_id = d.id 
GROUP BY c.nome;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE matriculas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE alunos CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE alunos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE matriculas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    aluno_id NUMBER NOT NULL, 
    status VARCHAR2(20) NOT NULL, 
    data_matricula DATE NOT NULL, 
    FOREIGN KEY (aluno_id) REFERENCES alunos(id) 
);

INSERT INTO alunos (nome) VALUES ('João Silva');

INSERT INTO alunos (nome) VALUES ('Maria Santos');

INSERT INTO alunos (nome) VALUES ('Pedro Oliveira');

INSERT INTO alunos (nome) VALUES ('Ana Costa');

INSERT INTO alunos (nome) VALUES ('Lucas Lima');

INSERT INTO matriculas (aluno_id, status, data_matricula) VALUES (1, 'Ativo', DATE '2023-05-01');

INSERT INTO matriculas (aluno_id, status, data_matricula) VALUES (2, 'Concluído', DATE '2022-12-15');

INSERT INTO matriculas (aluno_id, status, data_matricula) VALUES (3, 'Trancado', DATE '2023-01-20');

INSERT INTO matriculas (aluno_id, status, data_matricula) VALUES (4, 'Ativo', DATE '2023-03-10');

INSERT INTO matriculas (aluno_id, status, data_matricula) VALUES (5, 'Ativo', DATE '2023-07-25');

SELECT a.nome AS aluno, m.status, m.data_matricula 
FROM alunos a 
JOIN matriculas m ON a.id = m.aluno_id 
ORDER BY  
  CASE  
    WHEN m.status = 'Ativo' THEN 1 
    WHEN m.status = 'Concluído' THEN 2 
    WHEN m.status = 'Trancado' THEN 3 
    ELSE 4 
  END, 
  m.data_matricula DESC;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE matriculas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE alunos CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE alunos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE matriculas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    aluno_id NUMBER NOT NULL, 
    status VARCHAR2(20) NOT NULL, 
    data_matricula DATE NOT NULL, 
    FOREIGN KEY (aluno_id) REFERENCES alunos(id) 
);

INSERT INTO alunos (nome) VALUES ('João Silva');

INSERT INTO alunos (nome) VALUES ('Maria Santos');

INSERT INTO alunos (nome) VALUES ('Pedro Oliveira');

INSERT INTO alunos (nome) VALUES ('Ana Costa');

INSERT INTO alunos (nome) VALUES ('Lucas Lima');

INSERT INTO matriculas (aluno_id, status, data_matricula) VALUES (1, 'Ativo', DATE '2023-05-01');

INSERT INTO matriculas (aluno_id, status, data_matricula) VALUES (2, 'Concluído', DATE '2022-12-15');

INSERT INTO matriculas (aluno_id, status, data_matricula) VALUES (3, 'Trancado', DATE '2023-01-20');

INSERT INTO matriculas (aluno_id, status, data_matricula) VALUES (4, 'Ativo', DATE '2023-03-10');

INSERT INTO matriculas (aluno_id, status, data_matricula) VALUES (5, 'Ativo', DATE '2023-07-25');

SELECT a.nome AS aluno, m.status, m.data_matricula 
FROM alunos a 
JOIN matriculas m ON a.id = m.aluno_id 
ORDER BY  
  CASE  
    WHEN m.status = 'Ativo' THEN 1 
    WHEN m.status = 'Concluído' THEN 2 
    WHEN m.status = 'Trancado' THEN 3 
    ELSE 4 
  END, 
  m.data_matricula DESC;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE alunos CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE alunos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    data_nascimento DATE NOT NULL 
);

INSERT INTO alunos (nome, data_nascimento) VALUES ('João Silva', DATE '1990-04-15');

INSERT INTO alunos (nome, data_nascimento) VALUES ('Maria Santos', DATE '1985-09-30');

INSERT INTO alunos (nome, data_nascimento) VALUES ('Pedro Oliveira', DATE '1992-11-05');

INSERT INTO alunos (nome, data_nascimento) VALUES ('Ana Costa', DATE '1995-02-20');

INSERT INTO alunos (nome, data_nascimento) VALUES ('Lucas Lima', DATE '1988-07-11');

SELECT  
    nome, 
    FLOOR(MONTHS_BETWEEN(SYSDATE, data_nascimento) / 12) AS idade 
FROM alunos 
ORDER BY idade DESC;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE matriculas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE alunos CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE alunos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE matriculas ( 
    aluno_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (aluno_id) REFERENCES alunos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

INSERT INTO alunos (nome) VALUES ('João Silva');

INSERT INTO alunos (nome) VALUES ('Maria Santos');

INSERT INTO alunos (nome) VALUES ('Pedro Oliveira');

INSERT INTO alunos (nome) VALUES ('Ana Costa');

INSERT INTO alunos (nome) VALUES ('Lucas Lima');

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO disciplinas (nome) VALUES ('História');

INSERT INTO disciplinas (nome) VALUES ('Geografia');

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (1, 1);

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (1, 2);

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (2, 1);

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (2, 3);

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (3, 1);

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (3, 4);

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (4, 3);

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (4, 5);

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (5, 2);

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (5, 5);

SELECT d.nome AS disciplina, COUNT(m.aluno_id) AS numero_de_alunos 
FROM disciplinas d 
JOIN matriculas m ON d.id = m.disciplina_id 
GROUP BY d.nome 
ORDER BY numero_de_alunos DESC;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE turmas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE professores_disciplinas ( 
    professor_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE turmas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE professores_disciplinas ( 
    professor_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

CREATE TABLE turmas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_disciplina_id NUMBER NOT NULL, 
    horario TIMESTAMP NOT NULL, 
    FOREIGN KEY (professor_disciplina_id) REFERENCES professores_disciplinas(professor_id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 1);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 2);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 3);

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (1, TIMESTAMP '2024-11-01 08:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (2, TIMESTAMP '2024-11-01 10:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (3, TIMESTAMP '2024-11-01 09:30:00');

SELECT p.nome AS professor, d.nome AS disciplina, t.horario 
FROM turmas t 
JOIN professores_disciplinas pd ON t.professor_disciplina_id = pd.professor_id 
JOIN professores p ON pd.professor_id = p.id 
JOIN disciplinas d ON pd.disciplina_id = d.id 
ORDER BY t.horario;

CREATE TABLE turmas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_disciplina_id NUMBER NOT NULL, 
    horario TIMESTAMP NOT NULL, 
    FOREIGN KEY (professor_disciplina_id) REFERENCES professores_disciplinas(professor_id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 1);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 2);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 3);

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (1, TIMESTAMP '2024-11-01 08:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (2, TIMESTAMP '2024-11-01 10:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (3, TIMESTAMP '2024-11-01 09:30:00');

SELECT p.nome AS professor, d.nome AS disciplina, t.horario 
FROM turmas t 
JOIN professores_disciplinas pd ON t.professor_disciplina_id = pd.professor_id 
JOIN professores p ON pd.professor_id = p.id 
JOIN disciplinas d ON pd.disciplina_id = d.id 
ORDER BY t.horario;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE turmas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE professores_disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

CREATE TABLE turmas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_disciplina_id NUMBER NOT NULL, 
    horario TIMESTAMP NOT NULL, 
    FOREIGN KEY (professor_disciplina_id) REFERENCES professores_disciplinas(id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 1);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 2);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 3);

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (1, TIMESTAMP '2024-11-01 08:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (2, TIMESTAMP '2024-11-01 10:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (3, TIMESTAMP '2024-11-01 09:30:00');

SELECT p.nome AS professor, d.nome AS disciplina, t.horario 
FROM turmas t 
JOIN professores_disciplinas pd ON t.professor_disciplina_id = pd.id 
JOIN professores p ON pd.professor_id = p.id 
JOIN disciplinas d ON pd.disciplina_id = d.id 
ORDER BY t.horario;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE turmas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE professores_disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

CREATE TABLE turmas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_disciplina_id NUMBER NOT NULL, 
    horario TIMESTAMP NOT NULL, 
    FOREIGN KEY (professor_disciplina_id) REFERENCES professores_disciplinas(id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 1);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 2);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 3);

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (1, TIMESTAMP '2024-11-01 08:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (2, TIMESTAMP '2024-11-01 10:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (3, TIMESTAMP '2024-11-01 09:30:00');

SELECT p.nome AS professor, d.nome AS disciplina, t.horario 
FROM turmas t 
JOIN professores_disciplinas pd ON t.professor_disciplina_id = pd.id 
JOIN professores p ON pd.professor_id = p.id 
JOIN disciplinas d ON pd.disciplina_id = d.id 
ORDER BY t.horario;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE turmas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE professores_disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

CREATE TABLE turmas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_disciplina_id NUMBER NOT NULL, 
    horario TIMESTAMP NOT NULL, 
    FOREIGN KEY (professor_disciplina_id) REFERENCES professores_disciplinas(id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 1);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 2);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 3);

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (1, TIMESTAMP '2024-11-01 08:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (2, TIMESTAMP '2024-11-01 10:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (3, TIMESTAMP '2024-11-01 09:30:00');

SELECT p.nome AS professor, d.nome AS disciplina, t.horario 
FROM turmas t 
JOIN professores_disciplinas pd ON t.professor_disciplina_id = pd.id 
JOIN professores p ON pd.professor_id = p.id 
JOIN disciplinas d ON pd.disciplina_id = d.id 
ORDER BY t.horario;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE turmas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE professores_disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

CREATE TABLE turmas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_disciplina_id NUMBER NOT NULL, 
    horario TIMESTAMP NOT NULL, 
    FOREIGN KEY (professor_disciplina_id) REFERENCES professores_disciplinas(id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 1);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 2);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 3);

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (1, TIMESTAMP '2024-11-01 08:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (2, TIMESTAMP '2024-11-01 10:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (3, TIMESTAMP '2024-11-01 09:30:00');

SELECT p.nome AS professor, d.nome AS disciplina, t.horario 
FROM turmas t 
JOIN professores_disciplinas pd ON t.professor_disciplina_id = pd.id 
JOIN professores p ON pd.professor_id = p.id 
JOIN disciplinas d ON pd.disciplina_id = d.id 
ORDER BY t.horario;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE turmas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE professores_disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

CREATE TABLE turmas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_disciplina_id NUMBER NOT NULL, 
    horario TIMESTAMP NOT NULL, 
    FOREIGN KEY (professor_disciplina_id) REFERENCES professores_disciplinas(id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 1);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 2);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 3);

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (1, TIMESTAMP '2024-11-01 08:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (2, TIMESTAMP '2024-11-01 10:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (3, TIMESTAMP '2024-11-01 09:30:00');

SELECT p.nome AS professor, d.nome AS disciplina, t.horario 
FROM turmas t 
JOIN professores_disciplinas pd ON t.professor_disciplina_id = pd.id 
JOIN professores p ON pd.professor_id = p.id 
JOIN disciplinas d ON pd.disciplina_id = d.id 
ORDER BY t.horario;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE turmas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN -- Se o erro não for "tabela não existe" 
      RAISE; -- Re-lançar o erro 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE professores_disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

CREATE TABLE turmas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_disciplina_id NUMBER NOT NULL, 
    horario TIMESTAMP NOT NULL, 
    FOREIGN KEY (professor_disciplina_id) REFERENCES professores_disciplinas(id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 1);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 2);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 3);

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (1, TIMESTAMP '2024-11-01 08:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (2, TIMESTAMP '2024-11-01 10:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (3, TIMESTAMP '2024-11-01 09:30:00');

SELECT p.nome AS professor, d.nome AS disciplina, t.horario 
FROM turmas t 
JOIN professores_disciplinas pd ON t.professor_disciplina_id = pd.id 
JOIN professores p ON pd.professor_id = p.id 
JOIN disciplinas d ON pd.disciplina_id = d.id 
ORDER BY t.horario;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE turmas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN -- Se o erro não for "tabela não existe" 
      RAISE; -- Re-lançar o erro 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE professores_disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

CREATE TABLE turmas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_disciplina_id NUMBER NOT NULL, 
    horario TIMESTAMP NOT NULL, 
    FOREIGN KEY (professor_disciplina_id) REFERENCES professores_disciplinas(id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 1);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 2);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 3);

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (1, TIMESTAMP '2024-11-01 08:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (2, TIMESTAMP '2024-11-01 10:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (3, TIMESTAMP '2024-11-01 09:30:00');

SELECT p.nome AS professor, d.nome AS disciplina, t.horario 
FROM turmas t 
JOIN professores_disciplinas pd ON t.professor_disciplina_id = pd.id 
JOIN professores p ON pd.professor_id = p.id 
JOIN disciplinas d ON pd.disciplina_id = d.id 
ORDER BY t.horario;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE turmas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores_disciplinas CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN -- Se o erro não for "tabela não existe" 
      RAISE; -- Re-lançar o erro 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE professores_disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

CREATE TABLE turmas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_disciplina_id NUMBER NOT NULL, 
    horario TIMESTAMP NOT NULL, 
    FOREIGN KEY (professor_disciplina_id) REFERENCES professores_disciplinas(id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 1);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 2);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 3);

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (1, TIMESTAMP '2024-11-01 08:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (2, TIMESTAMP '2024-11-01 10:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (3, TIMESTAMP '2024-11-01 09:30:00');

SELECT p.nome AS professor, d.nome AS disciplina, t.horario 
FROM turmas t 
JOIN professores_disciplinas pd ON t.professor_disciplina_id = pd.id 
JOIN professores p ON pd.professor_id = p.id 
JOIN disciplinas d ON pd.disciplina_id = d.id 
ORDER BY t.horario;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE turmas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN  
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE professores_disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN  
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN  
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN  
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE professores_disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

CREATE TABLE turmas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_disciplina_id NUMBER NOT NULL, 
    horario TIMESTAMP NOT NULL, 
    FOREIGN KEY (professor_disciplina_id) REFERENCES professores_disciplinas(id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 1);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 2);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 3);

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (1, TIMESTAMP '2024-11-01 08:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (2, TIMESTAMP '2024-11-01 10:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (3, TIMESTAMP '2024-11-01 09:30:00');

SELECT p.nome AS professor, d.nome AS disciplina, t.horario 
FROM turmas t 
JOIN professores_disciplinas pd ON t.professor_disciplina_id = pd.id 
JOIN professores p ON pd.professor_id = p.id 
JOIN disciplinas d ON pd.disciplina_id = d.id 
ORDER BY t.horario;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE turmas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN  
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE professores_disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN  
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN  
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN  
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE professores_disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) 
);

CREATE TABLE turmas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    professor_disciplina_id NUMBER NOT NULL, 
    horario TIMESTAMP NOT NULL, 
    FOREIGN KEY (professor_disciplina_id) REFERENCES professores_disciplinas(id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 1);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 2);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 3);

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (1, TIMESTAMP '2024-11-01 08:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (2, TIMESTAMP '2024-11-01 10:00:00');

INSERT INTO turmas (professor_disciplina_id, horario) VALUES (3, TIMESTAMP '2024-11-01 09:30:00');

SELECT p.nome AS professor, d.nome AS disciplina, t.horario 
FROM turmas t 
JOIN professores_disciplinas pd ON t.professor_disciplina_id = pd.id 
JOIN professores p ON pd.professor_id = p.id 
JOIN disciplinas d ON pd.disciplina_id = d.id 
ORDER BY t.horario;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Matemática', 90);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 60);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Química', 85);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('História', 70);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Geografia', 100);

SELECT COUNT(*) AS numero_disciplinas_acima_80_horas 
FROM disciplinas 
WHERE carga_horaria > 80;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE curso_disciplina CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE curso_disciplina ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id), 
    PRIMARY KEY (curso_id, disciplina_id) 
);

INSERT INTO cursos (nome) VALUES ('Engenharia');

INSERT INTO cursos (nome) VALUES ('Matemática');

INSERT INTO cursos (nome) VALUES ('História');

INSERT INTO disciplinas (nome) VALUES ('Cálculo');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('História Antiga');

INSERT INTO disciplinas (nome) VALUES ('Álgebra');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (1, 1); -- Engenharia - Cálculo 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (1, 2); -- Engenharia - Física 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (1, 5); -- Engenharia - Química 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (2, 1); -- Matemática - Cálculo 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (2, 4); -- Matemática - Álgebra 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (3, 3); -- História - História Antiga 
 
-- Consulta para listar cursos e a quantidade de disciplinas associadas 
SELECT c.nome AS curso, COUNT(cd.disciplina_id) AS quantidade_disciplinas 
FROM cursos c 
LEFT JOIN curso_disciplina cd ON c.id = cd.curso_id 
GROUP BY c.nome 
ORDER BY quantidade_disciplinas DESC;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE curso_disciplina CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE curso_disciplina ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id), 
    PRIMARY KEY (curso_id, disciplina_id) 
);

INSERT INTO cursos (nome) VALUES ('Engenharia');

INSERT INTO cursos (nome) VALUES ('Matemática');

INSERT INTO cursos (nome) VALUES ('História');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Cálculo', 100);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 60);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('História Antiga', 90);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Álgebra', 80);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Química', 70);

INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (1, 1); -- Engenharia - Cálculo 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (1, 2); -- Engenharia - Física 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (1, 5); -- Engenharia - Química 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (2, 1); -- Matemática - Cálculo 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (2, 4); -- Matemática - Álgebra 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (3, 3); -- História - História Antiga 
 
-- Consulta para listar cursos e a quantidade de disciplinas associadas 
SELECT c.nome AS curso, COUNT(cd.disciplina_id) AS quantidade_disciplinas 
FROM cursos c 
LEFT JOIN curso_disciplina cd ON c.id = cd.curso_id 
GROUP BY c.nome 
ORDER BY quantidade_disciplinas DESC;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE curso_disciplina CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE curso_disciplina CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE curso_disciplina ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id), 
    PRIMARY KEY (curso_id, disciplina_id) 
);

INSERT INTO cursos (nome) VALUES ('Engenharia');

INSERT INTO cursos (nome) VALUES ('Matemática');

INSERT INTO cursos (nome) VALUES ('História');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Cálculo', 100);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 60);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('História Antiga', 90);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Álgebra', 80);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Química', 70);

INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (1, 1); -- Engenharia - Cálculo 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (1, 2); -- Engenharia - Física 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (1, 5); -- Engenharia - Química 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (2, 1); -- Matemática - Cálculo 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (2, 4); -- Matemática - Álgebra 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (3, 3); -- História - História Antiga 
 
-- Consulta para listar cursos e a quantidade de disciplinas associadas 
SELECT c.nome AS curso, COUNT(cd.disciplina_id) AS quantidade_disciplinas 
FROM cursos c 
LEFT JOIN curso_disciplina cd ON c.id = cd.curso_id 
GROUP BY c.nome 
ORDER BY quantidade_disciplinas DESC;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE curso_disciplina ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id), 
    PRIMARY KEY (curso_id, disciplina_id) 
);

INSERT INTO cursos (nome) VALUES ('Engenharia');

INSERT INTO cursos (nome) VALUES ('Matemática');

INSERT INTO cursos (nome) VALUES ('História');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Cálculo', 100);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 60);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('História Antiga', 90);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Álgebra', 80);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Química', 70);

INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (1, 1); -- Engenharia - Cálculo 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (1, 2); -- Engenharia - Física 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (1, 5); -- Engenharia - Química 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (2, 1); -- Matemática - Cálculo 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (2, 4); -- Matemática - Álgebra 
INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (3, 3); -- História - História Antiga 
 
-- Consulta para listar cursos e a quantidade de disciplinas associadas 
SELECT c.nome AS curso, COUNT(cd.disciplina_id) AS quantidade_disciplinas 
FROM cursos c 
LEFT JOIN curso_disciplina cd ON c.id = cd.curso_id 
GROUP BY c.nome 
ORDER BY quantidade_disciplinas DESC;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE curso_disciplina CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE cursos CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE cursos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE curso_disciplina ( 
    curso_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (curso_id) REFERENCES cursos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id), 
    PRIMARY KEY (curso_id, disciplina_id) 
);

INSERT INTO cursos (nome) VALUES ('Engenharia');

INSERT INTO cursos (nome) VALUES ('Matemática');

INSERT INTO cursos (nome) VALUES ('História');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Cálculo', 100);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 60);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('História Antiga', 90);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Álgebra', 80);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Química', 70);

INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (1, 1);

INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (1, 2);

INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (1, 5);

INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (2, 1);

INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (2, 4);

INSERT INTO curso_disciplina (curso_id, disciplina_id) VALUES (3, 3);

SELECT c.nome AS curso, COUNT(cd.disciplina_id) AS quantidade_disciplinas 
FROM cursos c 
LEFT JOIN curso_disciplina cd ON c.id = cd.curso_id 
GROUP BY c.nome 
ORDER BY quantidade_disciplinas DESC;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE professores_disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE professores_disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE professores_disciplinas ( 
    professor_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id), 
    PRIMARY KEY (professor_id, disciplina_id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Cálculo', 105);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 95);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Química', 110);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('História', 120);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Álgebra', 130);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 1); -- Ana -> Cálculo 
INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 3); -- Ana -> Química 
INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 5); -- Ana -> Álgebra 
INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 2); -- Carlos -> Física 
INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 4); -- Carlos -> História 
INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 3); -- Beatriz -> Química 
INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 4); -- Beatriz -> História 
INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 5); -- Beatriz -> Álgebra 
 
-- Consulta para encontrar professores com mais de 2 disciplinas, cada uma com carga horária superior a 100 horas 
SELECT p.nome 
FROM professores p 
JOIN professores_disciplinas pd ON p.id = pd.professor_id 
JOIN disciplinas d ON pd.disciplina_id = d.id 
WHERE d.carga_horaria > 100 
GROUP BY p.nome 
HAVING COUNT(d.id) > 2;

CREATE TABLE professores_disciplinas ( 
    professor_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id), 
    PRIMARY KEY (professor_id, disciplina_id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Cálculo', 105);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 95);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Química', 110);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('História', 120);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Álgebra', 130);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 1);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 3);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 5);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 2);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 4);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 3);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 4);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 5);

SELECT p.nome 
FROM professores p 
JOIN professores_disciplinas pd ON p.id = pd.professor_id 
JOIN disciplinas d ON pd.disciplina_id = d.id 
WHERE d.carga_horaria > 100 
GROUP BY p.nome 
HAVING COUNT(d.id) > 2;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE matriculas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE alunos CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE alunos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE matriculas ( 
    aluno_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (aluno_id) REFERENCES alunos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id), 
    PRIMARY KEY (aluno_id, disciplina_id) 
);

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO disciplinas (nome) VALUES ('História');

INSERT INTO disciplinas (nome) VALUES ('Geografia');

INSERT INTO alunos (nome) VALUES ('Lucas');

INSERT INTO alunos (nome) VALUES ('Mariana');

INSERT INTO alunos (nome) VALUES ('Pedro');

INSERT INTO alunos (nome) VALUES ('Ana');

INSERT INTO alunos (nome) VALUES ('Beatriz');

INSERT INTO alunos (nome) VALUES ('Felipe');

INSERT INTO alunos (nome) VALUES ('Julia');

INSERT INTO alunos (nome) VALUES ('Rafael');

INSERT INTO alunos (nome) VALUES ('Carla');

INSERT INTO alunos (nome) VALUES ('Paula');

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (1, 1); -- Lucas -> Matemática 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (2, 1); -- Mariana -> Matemática 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (3, 1); -- Pedro -> Matemática 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (4, 1); -- Ana -> Matemática 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (5, 1); -- Beatriz -> Matemática 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (6, 2); -- Felipe -> Física 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (7, 2); -- Julia -> Física 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (8, 2); -- Rafael -> Física 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (9, 2); -- Carla -> Física 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (10, 2); -- Paula -> Física 
 
-- Consulta para listar disciplinas com pelo menos 5 alunos matriculados 
SELECT d.nome AS disciplina 
FROM disciplinas d 
JOIN matriculas m ON d.id = m.disciplina_id 
GROUP BY d.nome 
HAVING COUNT(m.aluno_id) >= 5;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE matriculas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE alunos CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE alunos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE matriculas ( 
    aluno_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (aluno_id) REFERENCES alunos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id), 
    PRIMARY KEY (aluno_id, disciplina_id) 
);

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO disciplinas (nome) VALUES ('História');

INSERT INTO disciplinas (nome) VALUES ('Geografia');

INSERT INTO alunos (nome) VALUES ('Lucas');

INSERT INTO alunos (nome) VALUES ('Mariana');

INSERT INTO alunos (nome) VALUES ('Pedro');

INSERT INTO alunos (nome) VALUES ('Ana');

INSERT INTO alunos (nome) VALUES ('Beatriz');

INSERT INTO alunos (nome) VALUES ('Felipe');

INSERT INTO alunos (nome) VALUES ('Julia');

INSERT INTO alunos (nome) VALUES ('Rafael');

INSERT INTO alunos (nome) VALUES ('Carla');

INSERT INTO alunos (nome) VALUES ('Paula');

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (1, 1); -- Lucas -> Matemática 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (2, 1); -- Mariana -> Matemática 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (3, 1); -- Pedro -> Matemática 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (4, 1); -- Ana -> Matemática 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (5, 1); -- Beatriz -> Matemática 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (6, 2); -- Felipe -> Física 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (7, 2); -- Julia -> Física 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (8, 2); -- Rafael -> Física 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (9, 2); -- Carla -> Física 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (10, 2); -- Paula -> Física 
 
-- Consulta para listar disciplinas com pelo menos 5 alunos matriculados 
SELECT d.nome AS disciplina 
FROM disciplinas d 
JOIN matriculas m ON d.id = m.disciplina_id 
GROUP BY d.nome 
HAVING COUNT(m.aluno_id) >= 5;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE matriculas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE alunos CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE alunos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE matriculas ( 
    aluno_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (aluno_id) REFERENCES alunos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id), 
    PRIMARY KEY (aluno_id, disciplina_id) 
);

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO disciplinas (nome) VALUES ('História');

INSERT INTO disciplinas (nome) VALUES ('Geografia');

INSERT INTO alunos (nome) VALUES ('Lucas');

INSERT INTO alunos (nome) VALUES ('Mariana');

INSERT INTO alunos (nome) VALUES ('Pedro');

INSERT INTO alunos (nome) VALUES ('Ana');

INSERT INTO alunos (nome) VALUES ('Beatriz');

INSERT INTO alunos (nome) VALUES ('Felipe');

INSERT INTO alunos (nome) VALUES ('Julia');

INSERT INTO alunos (nome) VALUES ('Rafael');

INSERT INTO alunos (nome) VALUES ('Carla');

INSERT INTO alunos (nome) VALUES ('Paula');

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (1, 1); -- Lucas -> Matemática 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (2, 1); -- Mariana -> Matemática 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (3, 1); -- Pedro -> Matemática 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (4, 1); -- Ana -> Matemática 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (5, 1); -- Beatriz -> Matemática 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (6, 2); -- Felipe -> Física 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (7, 2); -- Julia -> Física 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (8, 2); -- Rafael -> Física 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (9, 2); -- Carla -> Física 
INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (10, 2); -- Paula -> Física 
 
-- Consulta para listar disciplinas com pelo menos 5 alunos matriculados 
SELECT d.nome AS disciplina 
FROM disciplinas d 
JOIN matriculas m ON d.id = m.disciplina_id 
GROUP BY d.nome 
HAVING COUNT(m.aluno_id) >= 5;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE matriculas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE alunos CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE alunos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE matriculas ( 
    aluno_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (aluno_id) REFERENCES alunos(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id), 
    PRIMARY KEY (aluno_id, disciplina_id) 
);

INSERT INTO disciplinas (nome) VALUES ('Matemática');

INSERT INTO disciplinas (nome) VALUES ('Física');

INSERT INTO disciplinas (nome) VALUES ('Química');

INSERT INTO disciplinas (nome) VALUES ('História');

INSERT INTO disciplinas (nome) VALUES ('Geografia');

INSERT INTO alunos (nome) VALUES ('Lucas');

INSERT INTO alunos (nome) VALUES ('Mariana');

INSERT INTO alunos (nome) VALUES ('Pedro');

INSERT INTO alunos (nome) VALUES ('Ana');

INSERT INTO alunos (nome) VALUES ('Beatriz');

INSERT INTO alunos (nome) VALUES ('Felipe');

INSERT INTO alunos (nome) VALUES ('Julia');

INSERT INTO alunos (nome) VALUES ('Rafael');

INSERT INTO alunos (nome) VALUES ('Carla');

INSERT INTO alunos (nome) VALUES ('Paula');

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (1, 1);

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (2, 1);

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (3, 1);

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (4, 1);

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (5, 1);

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (6, 2);

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (7, 2);

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (8, 2);

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (9, 2);

INSERT INTO matriculas (aluno_id, disciplina_id) VALUES (10, 2);

SELECT d.nome AS disciplina 
FROM disciplinas d 
JOIN matriculas m ON d.id = m.disciplina_id 
GROUP BY d.nome 
HAVING COUNT(m.aluno_id) >= 5;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE alunos CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE status_matricula CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE status_matricula ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    descricao VARCHAR2(50) NOT NULL 
);

CREATE TABLE alunos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    status_id NUMBER NOT NULL, 
    FOREIGN KEY (status_id) REFERENCES status_matricula(id) 
);

INSERT INTO status_matricula (descricao) VALUES ('Ativo');

INSERT INTO status_matricula (descricao) VALUES ('Concluído');

INSERT INTO status_matricula (descricao) VALUES ('Trancado');

INSERT INTO alunos (nome, status_id) VALUES ('Lucas', 1);

INSERT INTO alunos (nome, status_id) VALUES ('Mariana', 1);

INSERT INTO alunos (nome, status_id) VALUES ('Pedro', 2);

INSERT INTO alunos (nome, status_id) VALUES ('Ana', 1);

INSERT INTO alunos (nome, status_id) VALUES ('Beatriz', 3);

INSERT INTO alunos (nome, status_id) VALUES ('Felipe', 1);

INSERT INTO alunos (nome, status_id) VALUES ('Julia', 2);

INSERT INTO alunos (nome, status_id) VALUES ('Rafael', 2);

INSERT INTO alunos (nome, status_id) VALUES ('Carla', 3);

INSERT INTO alunos (nome, status_id) VALUES ('Paula', 1);

SELECT s.descricao AS status, COUNT(a.id) AS numero_alunos 
FROM alunos a 
JOIN status_matricula s ON a.status_id = s.id 
GROUP BY s.descricao 
ORDER BY numero_alunos DESC;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE alunos CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE status_matricula CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE status_matricula ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    descricao VARCHAR2(50) NOT NULL 
);

CREATE TABLE alunos ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    status_id NUMBER NOT NULL, 
    FOREIGN KEY (status_id) REFERENCES status_matricula(id) 
);

INSERT INTO status_matricula (descricao) VALUES ('Ativo');

INSERT INTO status_matricula (descricao) VALUES ('Concluído');

INSERT INTO status_matricula (descricao) VALUES ('Trancado');

INSERT INTO alunos (nome, status_id) VALUES ('Lucas', 1);

INSERT INTO alunos (nome, status_id) VALUES ('Mariana', 1);

INSERT INTO alunos (nome, status_id) VALUES ('Pedro', 2);

INSERT INTO alunos (nome, status_id) VALUES ('Ana', 1);

INSERT INTO alunos (nome, status_id) VALUES ('Beatriz', 3);

INSERT INTO alunos (nome, status_id) VALUES ('Felipe', 1);

INSERT INTO alunos (nome, status_id) VALUES ('Julia', 2);

INSERT INTO alunos (nome, status_id) VALUES ('Rafael', 2);

INSERT INTO alunos (nome, status_id) VALUES ('Carla', 3);

INSERT INTO alunos (nome, status_id) VALUES ('Paula', 1);

SELECT s.descricao AS status, COUNT(a.id) AS numero_alunos 
FROM alunos a 
JOIN status_matricula s ON a.status_id = s.id 
GROUP BY s.descricao 
ORDER BY numero_alunos DESC;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE professores_disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE professores_disciplinas ( 
    professor_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id), 
    PRIMARY KEY (professor_id, disciplina_id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Cálculo', 100);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 60);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Química', 90);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('História', 120);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Álgebra', 80);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 1); -- Ana -> Cálculo 
INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 3); -- Ana -> Química 
INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 2); -- Carlos -> Física 
INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 4); -- Carlos -> História 
INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 3); -- Beatriz -> Química 
INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 5); -- Beatriz -> Álgebra 
 
-- Consulta para listar professores e a soma da carga horária das disciplinas que lecionam 
SELECT p.nome AS professor, SUM(d.carga_horaria) AS total_carga_horaria 
FROM professores p 
JOIN professores_disciplinas pd ON p.id = pd.professor_id 
JOIN disciplinas d ON pd.disciplina_id = d.id 
GROUP BY p.nome 
ORDER BY total_carga_horaria DESC;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE professores_disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE professores CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE disciplinas CASCADE CONSTRAINTS'; 
EXCEPTION 
  WHEN OTHERS THEN 
    IF SQLCODE != -942 THEN 
      RAISE; 
    END IF; 
END; 
/

CREATE TABLE professores ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL 
);

CREATE TABLE disciplinas ( 
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR2(100) NOT NULL, 
    carga_horaria NUMBER NOT NULL 
);

CREATE TABLE professores_disciplinas ( 
    professor_id NUMBER NOT NULL, 
    disciplina_id NUMBER NOT NULL, 
    FOREIGN KEY (professor_id) REFERENCES professores(id), 
    FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id), 
    PRIMARY KEY (professor_id, disciplina_id) 
);

INSERT INTO professores (nome) VALUES ('Ana Oliveira');

INSERT INTO professores (nome) VALUES ('Carlos Silva');

INSERT INTO professores (nome) VALUES ('Beatriz Santos');

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Cálculo', 100);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Física', 60);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Química', 90);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('História', 120);

INSERT INTO disciplinas (nome, carga_horaria) VALUES ('Álgebra', 80);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 1);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (1, 3);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 2);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (2, 4);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 3);

INSERT INTO professores_disciplinas (professor_id, disciplina_id) VALUES (3, 5);

SELECT p.nome AS professor, SUM(d.carga_horaria) AS total_carga_horaria 
FROM professores p 
JOIN professores_disciplinas pd ON p.id = pd.professor_id 
JOIN disciplinas d ON pd.disciplina_id = d.id 
GROUP BY p.nome 
ORDER BY total_carga_horaria DESC;

